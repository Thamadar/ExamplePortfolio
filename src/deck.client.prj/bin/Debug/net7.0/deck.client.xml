<?xml version="1.0"?>
<doc>
    <assembly>
        <name>deck.client</name>
    </assembly>
    <members>
        <member name="M:Deck.Client.App.GetMainWindow(Autofac.IContainer)">
            <summary>
            Get main window view.
            </summary> 
        </member>
        <member name="M:Deck.Client.App.OnMainWindowClosed(System.Object,System.EventArgs)">
            <summary>
            Ons the main window closed.
            </summary> 
        </member>
        <member name="P:Deck.Client.Data.ICard.Suit">
            <summary>
            Масть карты.
            </summary>
        </member>
        <member name="P:Deck.Client.Data.ICard.PowerValue">
            <summary>
            Сила карты.
            </summary>
        </member>
        <member name="P:Deck.Client.Data.IDeck.Id">
            <summary>
            Идентификатор колоды.
            </summary>
        </member>
        <member name="P:Deck.Client.Data.IDeck.Cards">
            <summary>
            Массив карт.
            </summary>
        </member>
        <member name="P:Deck.Client.Data.IDeck.DeckType">
            <summary>
            Тип колоды. (24, 32, 36, 52)
            </summary>
        </member>
        <member name="P:Deck.Client.Data.IDeck.Name">
            <summary>
            Имя колоды.
            </summary>
        </member>
        <member name="P:Deck.Client.Data.IDeck.LastVisibleCard">
            <summary>
            Самая верхняя карта.
            </summary>
        </member>
        <member name="M:Deck.Client.Data.IDeck.RenameDeck(System.String)">
            <summary>
            Переименовать колоду.
            </summary> 
        </member>
        <member name="M:Deck.Client.Data.IDeck.ShaffleDeck(System.Int32[])">
            <summary>
            Перетасовать колоду.
            </summary> 
        </member>
        <member name="M:Deck.Client.Data.IDeckRepository.GetDecks">
            <summary>
            Получить все колоды из Storage'а.
            </summary> 
        </member>
        <member name="M:Deck.Client.Data.IDeckRepository.GetDeck(System.Int32)">
            <summary>
            Получить колоду из Storage по её ID.
            </summary> 
        </member>
        <member name="M:Deck.Client.Data.IDeckRepository.AddDeck(Deck.Client.Data.IDeck)">
            <summary>
            Добавить колоду в Storage.
            </summary> 
        </member>
        <member name="M:Deck.Client.Data.IDeckRepository.ShaffleDeck(System.Int32,System.Int32[])">
            <summary>
            Перетасовать колоду по ID.
            </summary> 
        </member>
        <member name="M:Deck.Client.Data.IDeckRepository.RenameDeck(System.Int32,System.String)">
            <summary>
            Переименовать колоду в Storage по ID.
            </summary> 
        </member>
        <member name="M:Deck.Client.Data.IDeckRepository.RemoveDeck(System.Int32)">
            <summary>
            Удалить колоду из Storage по ID.
            </summary> 
        </member>
        <member name="P:Deck.Client.Data.IDeckStorage.Decks">
            <summary>
            Хранилище колод.
            </summary>
        </member>
        <member name="M:Deck.Client.Data.IDeckStorage.LoadDecks">
            <summary>
            Подгрузка колод при инициализации.
            </summary>
        </member>
        <member name="M:Deck.Client.Data.IDeckStorage.SaveDecks">
            <summary>
            Сохранение колод при завершении.
            </summary>
        </member>
        <member name="T:Deck.Client.Services.RegistrationService">
            <summary>
            The registration service.
            </summary>
        </member>
        <member name="M:Deck.Client.Services.RegistrationService.CreateContainer">
            <summary>
            Creates the container.
            </summary>
            <param name="appServices">The app services.</param>
            <returns>An IContainer.</returns>
        </member>
        <member name="M:Deck.Client.Views.MainWindowTitleBarView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="M:Deck.Client.Views.MainWindowView.InitializeComponent(System.Boolean,System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
            <param name="attachDevTools">Should the dev tools be attached.</param>
        </member>
        <member name="M:Deck.Client.Views.Panels.DeckCollectionView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="M:Deck.Client.Views.Panels.DeckEditDialogWindowView.InitializeComponent(System.Boolean,System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
            <param name="attachDevTools">Should the dev tools be attached.</param>
        </member>
        <member name="M:Deck.Client.Views.Panels.PanelsView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
        <member name="M:Deck.Client.Views.Panels.CardConverter.Convert(System.Collections.Generic.IList{System.Object},System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Deck.Client.Views.Panels.SelectedDeckView.InitializeComponent(System.Boolean)">
            <summary>
            Wires up the controls and optionally loads XAML markup and attaches dev tools (if Avalonia.Diagnostics package is referenced).
            </summary>
            <param name="loadXaml">Should the XAML be loaded into the component.</param>
        </member>
    </members>
</doc>
